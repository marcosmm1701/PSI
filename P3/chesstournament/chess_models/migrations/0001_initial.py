# Generated by Django 4.2.2 on 2025-04-03 12:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('lichess_username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('lichess_rating_bullet', models.IntegerField(default=0, null=True)),
                ('lichess_rating_blitz', models.IntegerField(default=0, null=True)),
                ('lichess_rating_rapid', models.IntegerField(default=0, null=True)),
                ('lichess_rating_classical', models.IntegerField(default=0, null=True)),
                ('fide_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('fide_rating_blitz', models.IntegerField(default=0, null=True)),
                ('fide_rating_rapid', models.IntegerField(default=0, null=True)),
                ('fide_rating_classical', models.IntegerField(default=0, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('name', 'email')},
            },
        ),
        migrations.CreateModel(
            name='RankingSystemClass',
            fields=[
                ('value', models.CharField(choices=[('BU', 'Buchholz'), ('BC', 'Buchholz Cut 1'), ('BA', 'Buchholz Average'), ('SB', 'Sonneborn-Berger'), ('PS', 'Plain Score'), ('WI', 'No. Wins'), ('BT', 'No. games played with Black')], max_length=2, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('refereeNumber', models.CharField(blank=True, default=-1, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('max_update_time', models.IntegerField(default=43200)),
                ('only_administrative', models.BooleanField(default=False)),
                ('tournament_type', models.CharField(max_length=2)),
                ('tournament_speed', models.CharField(max_length=2)),
                ('board_type', models.CharField(max_length=3)),
                ('win_points', models.FloatField(default=1.0)),
                ('draw_points', models.FloatField(default=0.5)),
                ('lose_points', models.FloatField(default=0.0)),
                ('timeControl', models.CharField(default='15+0', max_length=32)),
                ('number_of_rounds_for_swiss', models.IntegerField(default=0)),
                ('administrariveUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(blank=True, to='chess_models.player')),
                ('rankingList', models.ManyToManyField(blank=True, to='chess_models.rankingsystemclass')),
                ('referee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='chess_models.referee')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('finish', models.BooleanField(default=False)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='chess_models.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finished', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('result', models.CharField(choices=[('w', 'White'), ('b', 'Black'), ('=', 'Draw'), ('+', 'Forfeit win'), ('-', 'Forfeit loss'), ('H', 'Half point bye'), ('F', 'Full point bye'), ('U', 'Unpaired game point bye'), ('Z', 'Zero point bye'), ('*', 'No available')], default='*', max_length=1)),
                ('rankingOrder', models.IntegerField(default=0, null=True)),
                ('black', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_as_black', to='chess_models.player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='chess_models.round')),
                ('white', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_as_white', to='chess_models.player')),
            ],
        ),
    ]
